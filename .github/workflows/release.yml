# .github/workflows/release.yml
name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, '[skip ci]') == false && !contains(github.event.head_commit.message, 'chore(release)')"

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install Dependencies
        run: bun install --frozen-lockfile

      - name: Configure Git User
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Determine Next Version
        id: cliff
        run: |
          # Get the proposed version from git-cliff
          BUMPED_VERSION=$(bunx git-cliff --bumped-version)

          if [ -z "$BUMPED_VERSION" ]; then
            echo "No new version determined by git-cliff. Skipping release."
            echo "SKIP=true" >> $GITHUB_OUTPUT
          else
            # Remove the leading 'v' for processing, if it exists
            CLEAN_VERSION=${BUMPED_VERSION#v}
            echo "Determined next version: $CLEAN_VERSION"
            echo "VERSION=$CLEAN_VERSION" >> $GITHUB_OUTPUT
          fi

      - name: Generate Changelog and Bump Version
        if: steps.cliff.outputs.SKIP != 'true'
        run: |
          # Generate changelog for the determined version
          bunx git-cliff --bump --output CHANGELOG.md --tag v${{ steps.cliff.outputs.VERSION }}
          # Update package.json using bun
          bun pm version ${{ steps.cliff.outputs.VERSION }} --no-git-tag-version

      - name: Commit and Push Changes
        if: steps.cliff.outputs.SKIP != 'true'
        run: |
          # Use `git add .` which is safer if some files were not modified
          git add .
          # Check if there are any changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m "chore(release): v${{ steps.cliff.outputs.VERSION }}"
            git tag "v${{ steps.cliff.outputs.VERSION }}"
            git push && git push --tags
          fi

      - name: Publish to Marketplace
        if: steps.cliff.outputs.SKIP != 'true'
        run: bun run release
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}

      - name: Create GitHub Release
        if: steps.cliff.outputs.SKIP != 'true'
        run: |
          RELEASE_NOTES=$(bunx git-cliff --latest --strip header --strip footer)
          gh release create "v${{ steps.cliff.outputs.VERSION }}" --notes "${RELEASE_NOTES}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
